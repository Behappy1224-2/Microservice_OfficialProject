name: CI/CD Pipeline for IM Microservice

on:
  push:
    branches:
      - main               # Trigger the workflow on pushes to the main branch
    paths:
      - 'im_microservice/**'    # Trigger when changes occur in the im_microservice folder
  pull_request:
    branches:
      - main
    paths:
      - 'im_microservice/**'
  workflow_dispatch:            # Allows manual triggering from the Actions tab

jobs:
  build-and-deploy-im:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (only needs to be done once per run)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Cache Python dependencies to speed up requirements installation
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install Dependencies using the cached environment
      - name: Install Dependencies
        working-directory: ./im_microservice
        run: |
          pip install -r requirements.txt

      # Step 5: Build Docker Image using caching to avoid full rebuilds when unnecessary
      - name: Build Docker Image for IM Microservice
        working-directory: ./im_microservice
        run: docker build --cache-from=type=gha --cache-to=type=gha,mode=max -t im-microservice:latest .

      # Step 6: Deploy IM Microservice to Render via API
      - name: Deploy IM Microservice to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          RESPONSE=$(curl -X POST https://api.render.com/v1/services/YOUR_SERVICE_ID/deploys \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":false}')
          echo "Deployment Response: $RESPONSE"

